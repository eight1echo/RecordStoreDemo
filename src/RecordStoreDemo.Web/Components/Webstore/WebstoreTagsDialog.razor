@inject IWebstoreMetaFieldService _shopifyMetaFields

<MudDialog>
    <DialogContent>
        @if (!string.IsNullOrEmpty(Product.Title))
        {
            <MudGrid Class="pb-3">
                <MudItem xs="6" Class="d-flex justify-end">
                    <MudText Class="mt-5" Typo="Typo.h6">TAGS</MudText>
                </MudItem>
                <MudItem xs="6" Class="d-flex align-center justify-end">
                    <MudIconButton OnClick="UpdateTags" Icon="@Icons.Material.Filled.Save" Color="Color.Success" Size="Size.Large" Title="Save" />
                    <MudIconButton OnClick="() => MudDialog!.Cancel()" Icon="@Icons.Material.Filled.DoNotDisturb" Color="Color.Error" Size="Size.Large" Title="Cancel" />
                </MudItem>
            </MudGrid>
            
            <MudChipSet @bind-SelectedChips="selectedTags" MultiSelection="true">
                @foreach (var tag in ProductMetaFields.Tags)
                {
                    <MudChip Text="@tag" Variant="Variant.Outlined" SelectedColor="Color.Primary" Default="@SelectionHelpers.IsTagSelected(Product, tag)"></MudChip>
                }
            </MudChipSet>
        }
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance? MudDialog { get; set; }

    [Parameter] public WebstoreProductModel Product { get; set; } = new WebstoreProductModel();

    MudChip[]? selectedTags;

    private async Task UpdateTags()
    {
        Product.Tags.Clear();

        if (selectedTags is not null && selectedTags.Length > 0)
        {
            foreach (var tag in selectedTags)
            {
                Product.Tags.Add(tag.Text);
            }
        }

        await _shopifyMetaFields.UpdateTags(Product);

        MudDialog!.Close(Product);
    }
}